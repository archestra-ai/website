{
  "name": "metoro-io__metoro-mcp-server",
  "display_name": "metoro-mcp-server",
  "description": "Metoro MCP Server",
  "author": {
    "name": "metoro-io"
  },
  "server": {
    "command": "./metoro-mcp-server",
    "args": [],
    "env": {
      "METORO_AUTH_TOKEN": "${user_config.metoro_auth_token}",
      "METORO_API_URL": "${user_config.metoro_api_url}"
    },
    "type": "local"
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {
    "metoro_auth_token": {
      "type": "string",
      "title": "Metoro Auth Token",
      "description": "Your authentication token from your Metoro account settings.",
      "sensitive": true,
      "required": true
    },
    "metoro_api_url": {
      "type": "string",
      "title": "Metoro API URL",
      "description": "The base URL for the Metoro API. Use 'https://demo.us-east.metoro.io' for the demo cluster.",
      "default": "https://us-east.metoro.io",
      "required": false
    }
  },
  "readme": "<div align=\"center\">\n<img src=\"./images/Metoro_square.svg\" height=\"300\" alt=\"Metoro MCP Logo\">\n</div>\n<br/>\n<div align=\"center\">\n\n![GitHub stars](https://img.shields.io/github/stars/metoro-io/metoro-mcp-server?style=social)\n![GitHub forks](https://img.shields.io/github/forks/metoro-io/metoro-mcp-server?style=social)\n![GitHub issues](https://img.shields.io/github/issues/metoro-io/metoro-mcp-server)\n![GitHub pull requests](https://img.shields.io/github/issues-pr/metoro-io/metoro-mcp-server)\n![GitHub license](https://img.shields.io/github/license/metoro-io/metoro-mcp-server)\n![GitHub contributors](https://img.shields.io/github/contributors/metoro-io/metoro-mcp-server)\n![GitHub last commit](https://img.shields.io/github/last-commit/metoro-io/metoro-mcp-server)\n[![GoDoc](https://pkg.go.dev/badge/github.com/metoro-io/metoro-mcp-server.svg)](https://pkg.go.dev/github.com/metoro-io/metoro-mcp-server)\n[![Go Report Card](https://goreportcard.com/badge/github.com/metoro-io/metoro-mcp-server)](https://goreportcard.com/report/github.com/metoro-io/metoro-mcp-server)\n![Tests](https://github.com/metoro-io/metoro-mcp-server/actions/workflows/go-test.yml/badge.svg)\n\n</div>\n\n# metoro-mcp-server\nThis repository contains th Metoro MCP (Model Context Protocol) Server. This MCP Server allows you to interact with your Kubernetes cluster via the Claude Desktop App!\n\n## What is MCP (Model Context Protocol)? \nYou can read more about the Model Context Protocol here: https://modelcontextprotocol.io\n\nBut in a nutshell\n> The Model Context Protocol (MCP) is an open protocol that enables seamless integration between LLM applications and external data sources and tools. Whether youâ€™re building an AI-powered IDE, enhancing a chat interface, or creating custom AI workflows, MCP provides a standardized way to connect LLMs with the context they need.\n\n## What is Metoro?\n[Metoro](https://metoro.io/) is an observability platform designed for microservices running in Kubernetes and uses eBPF based instrumentation to generate deep telemetry without code changes.\nThe data that is generated by the eBPF agents is sent to Metoro's backend to be stored and in the Metoro frontend using our apis.\n\nThis MCP server exposes those APIs to an LLM so you can ask your AI questions about your Kubernetes cluster.\n\n## Demo\n\nhttps://github.com/user-attachments/assets/b3f21e9a-45b8-4c17-8d8c-cff560d8694f\n\n## How can I use Metoro MCP Server? \n1. Install the [Claude Desktop App](https://claude.ai/download).\n2. Make sure you have [Golang](https://golang.org/dl/) installed. `brew install go` for mac or `sudo apt-get install golang` for ubuntu.\n3. Clone the repository: `git clone https://github.com/metoro-io/metoro-mcp-server.git`\n4. Navigate to the repository directory: `cd metoro-mcp-server`\n5. Build the server executable: `go build -o metoro-mcp-server`\n\n### If you already have a Metoro Account:\nCopy your auth token from your Metoro account in [Settings](https://us-east.metoro.io/settings) -> Users Settings. \nCreate a file in `~/Library/Application Support/Claude/claude_desktop_config.json` with the following contents:\n```json\n{\n  \"mcpServers\": {\n    \"metoro-mcp-server\": {\n      \"command\": \"<your path to Metoro MCP server go executable>/metoro-mcp-server\",\n      \"args\": [],\n      \"env\": {\n          \"METORO_AUTH_TOKEN\" : \"<your auth token>\",\n          \"METORO_API_URL\": \"https://us-east.metoro.io\"\n       }\n    }\n  }\n}\n```\n\n### If you don't have a Metoro Account:\nNo worries, you can still play around using the [Live Demo Cluster](https://demo.us-east.metoro.io/).\nThe included token is a demo token, publicly available for anyone to use.\n   Create a file in `~/Library/Application Support/Claude/claude_desktop_config.json` with the following contents:\n```json\n{\n  \"mcpServers\": {\n    \"metoro-mcp-server\": {\n      \"command\": \"<your path to Metoro MCP server go executable>/metoro-mcp-server\",\n      \"args\": [],\n      \"env\": {\n          \"METORO_AUTH_TOKEN\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw\",\n          \"METORO_API_URL\": \"https://demo.us-east.metoro.io\"\n       }\n    }\n  }\n}\n```\n\n4. Once you are done editing `claude_desktop_config.json` save the file and restart Claude Desktop app.\n5. You should now see the Metoro MCP Server in the dropdown list of MCP Servers in the Claude Desktop App. You are ready to start using Metoro MCP Server with Claude Desktop App!\n\n## Built with\n\nThis server is built on top of our [Golang MCP SDK](https://github.com/metoro-io/mcp-golang).\n",
  "category": "AI Tools",
  "quality_score": 49,
  "archestra_config": {
    "client_config_permutations": {
      "metoro-mcp-server-configured": {
        "command": "metoro-mcp-server",
        "args": [],
        "env": {
          "METORO_AUTH_TOKEN": "<your auth token>",
          "METORO_API_URL": "https://us-east.metoro.io"
        }
      },
      "metoro-mcp-server-demo": {
        "command": "metoro-mcp-server",
        "args": [],
        "env": {
          "METORO_AUTH_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw",
          "METORO_API_URL": "https://demo.us-east.metoro.io"
        }
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    },
    "works_in_archestra": false
  },
  "github_info": {
    "owner": "metoro-io",
    "repo": "metoro-mcp-server",
    "url": "https://github.com/metoro-io/metoro-mcp-server",
    "name": "metoro-mcp-server",
    "path": null,
    "stars": 43,
    "contributors": 2,
    "issues": 3,
    "releases": true,
    "ci_cd": true,
    "latest_commit_hash": "20e60defb4619cea45f09a15d9aebebd5ce975cd"
  },
  "programming_language": "Go",
  "framework": null,
  "last_scraped_at": "2025-09-09T13:06:23.678Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": true,
    "implementing_sampling": true,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": false,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "metoro-io/mcp-golang",
      "importance": 10
    },
    {
      "name": "gin-gonic/gin",
      "importance": 10
    },
    {
      "name": "google.golang.org/protobuf",
      "importance": 8
    },
    {
      "name": "go-playground/validator/v10",
      "importance": 7
    },
    {
      "name": "golang.org/x/net",
      "importance": 7
    },
    {
      "name": "golang.org/x/sys",
      "importance": 7
    },
    {
      "name": "goccy/go-json",
      "importance": 6
    },
    {
      "name": "json-iterator/go",
      "importance": 6
    },
    {
      "name": "bytedance/sonic",
      "importance": 6
    },
    {
      "name": "ugorji/go/codec",
      "importance": 6
    },
    {
      "name": "gin-contrib/sse",
      "importance": 6
    },
    {
      "name": "invopop/jsonschema",
      "importance": 6
    },
    {
      "name": "tidwall/gjson",
      "importance": 5
    },
    {
      "name": "tidwall/sjson",
      "importance": 5
    },
    {
      "name": "pelletier/go-toml/v2",
      "importance": 5
    },
    {
      "name": "gopkg.in/yaml.v3",
      "importance": 5
    },
    {
      "name": "golang.org/x/crypto",
      "importance": 5
    },
    {
      "name": "golang.org/x/text",
      "importance": 5
    },
    {
      "name": "google/uuid",
      "importance": 4
    },
    {
      "name": "pkg/errors",
      "importance": 4
    }
  ],
  "raw_dependencies": "=== go.mod ===\nmodule github.com/metoro-io/metoro-mcp-server\n\ngo 1.23\n\nrequire (\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/metoro-io/mcp-golang v0.7.0\n)\n\nrequire (\n\tgithub.com/bytedance/sonic v1.11.6 // indirect\n\tgithub.com/bytedance/sonic/loader v0.1.1 // indirect\n\tgithub.com/cloudwego/base64x v0.1.4 // indirect\n\tgithub.com/cloudwego/iasm v0.2.0 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.3 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-playground/validator/v10 v10.20.0 // indirect\n\tgithub.com/goccy/go-json v0.10.2 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.12 // indirect\n\tgolang.org/x/arch v0.8.0 // indirect\n\tgolang.org/x/crypto v0.23.0 // indirect\n\tgolang.org/x/net v0.25.0 // indirect\n\tgolang.org/x/sys v0.20.0 // indirect\n\tgolang.org/x/text v0.15.0 // indirect\n\tgoogle.golang.org/protobuf v1.34.1 // indirect\n)\n\nrequire (\n\tgithub.com/bahlo/generic-list-go v0.2.0 // indirect\n\tgithub.com/buger/jsonparser v1.1.1 // indirect\n\tgithub.com/gin-gonic/gin v1.10.0\n\tgithub.com/invopop/jsonschema v0.12.0 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/tidwall/gjson v1.18.0 // indirect\n\tgithub.com/tidwall/match v1.1.1 // indirect\n\tgithub.com/tidwall/pretty v1.2.1 // indirect\n\tgithub.com/tidwall/sjson v1.2.5 // indirect\n\tgithub.com/wk8/go-ordered-map/v2 v2.1.8 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
}
