{
  "name": "gr",
  "slug": "yoelbassin__gnuradiomcp",
  "description": "MCP server for GNU Radio",
  "readme": "# GR-MCP: A gnuradio MCP Server\n\n[![Python Version](https://img.shields.io/badge/python-3.13%2B-blue.svg)](https://www.python.org/downloads/release/python-3130/)\n\n\n**GNURadio MCP Server** is a modern, extensible Machine Control Protocol (MCP) server for [GNURadio](https://www.gnuradio.org/), enabling programmatic, automated, and AI-driven creation of GNURadio flowgraphs. Designed for seamless integration with Large Language Models (LLMs), automation frameworks, and custom clients, it empowers you to generate `.grc` files and control SDR workflows at scale.\n\n> **Why GNURadio MCP Server?**\n> - Automate SDR workflows and flowgraph generation\n> - Integrate with LLMs, bots, and custom tools\n> - Build, modify, and validate flowgraphs programmatically\n> - Save time and reduce manual errors in SDR prototyping\n\n\n## Features\n- 🌐 **MCP API**: Exposes a robust MCP interface for GNURadio\n- 🛠️ **Programmatic Flowgraph Creation**: Build, edit, and save `.grc` files from code or automation\n- 🤖 **LLM & Automation Ready**: Designed for AI and automation integration\n- 🧩 **Extensible**: Modular architecture for easy extension and customization\n- 📝 **Example Flowgraphs**: Includes ready-to-use `.grc` examples in the `misc/` directory\n- 🧪 **Tested**: Comprehensive unit tests with `pytest`\n\n\n## Quickstart\n\n### Requirements\n- Python >= 3.13\n- GNURadio (Tested with GNURadio Companion v3.10.12.0)\n- UV\n\n### Usage\n1. **Clone the repository**\n```bash\ngit clone https://github.com/yoelbassin/gr-mcp\n```\n\n2. [**Install GNURadio**](https://wiki.gnuradio.org/index.php/InstallingGR)\n\n3. **Set up a UV environment**\n```bash\ncd gr-mcp\nuv venv --system-site-packages\n```\n   > The `--system-site-packages` flag is required because GNURadio installs the `gnuradio` Python package globally.\n\n4. **Add the MCP server configuration to your client configuration.** For example, for Claude Desktop or Cursor:\n```json\n\"mcpServers\": {\n    \"gr-mcp\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\",\n        \"/path/to/gr-mcp\",\n        \"run\",\n        \"main.py\"\n      ]\n    }\n  }\n```\n\n## Development\nInstall development dependencies and run tests with:\n```bash\npip install -e \".[dev]\"\npytest\n```\n\n\n## Project Status\n**In active development.** Core server functionality is available, but the API and features are evolving. Your feedback and contributions are highly valued!\n",
  "category": "AI Tools",
  "qualityScore": 58,
  "githubUrl": "https://github.com/yoelbassin/gnuradioMCP",
  "programmingLanguage": "Python",
  "gitHubOrg": "yoelbassin",
  "gitHubRepo": "gnuradioMCP",
  "repositoryPath": null,
  "gh_stars": 8,
  "gh_contributors": 2,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "7ed5e2543522773fe7b6b991a8505cec2dde2dd4",
  "last_scraped_at": "2025-08-04T09:36:51.357Z",
  "implementing_tools": true,
  "implementing_prompts": true,
  "implementing_resources": true,
  "implementing_sampling": true,
  "implementing_roots": false,
  "implementing_logging": false,
  "implementing_stdio": true,
  "implementing_streamable_http": false,
  "implementing_oauth2": false,
  "rawDependencies": "=== pyproject.toml ===\n[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"gnuradio-mcp\"\nversion = \"0.1.0\"\ndescription = \"A FastMCP server for gnuradio.\"\nrequires-python = \">=3.13\"\ndependencies = [\n    \"pydantic\",\n    \"fastmcp\",\n    # for gnuradio\n    \"mako\",\n    \"pyyaml\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pytest >= 7.0\",\n    \"pre-commit\"\n]\n\n[tool.pytest.ini_options]\n# Tell pytest where to find the package\npythonpath = [\"src\"]\n",
  "evaluation_model": "gemini-2.5-flash",
  "configForClients": {
    "mcpServers": {
      "gr-mcp": {
        "command": "uv",
        "args": ["--directory", "/path/to/gr-mcp", "run", "main.py"]
      }
    }
  },
  "configForArchestra": {
    "command": "uv",
    "args": ["--directory", "/path/to/gr-mcp", "run", "main.py"],
    "env": {},
    "transport": "stdio",
    "oauth": {
      "provider": "null",
      "required": false
    }
  },
  "dependencies": [
    {
      "importance": 10,
      "name": "fastmcp"
    },
    {
      "importance": 8,
      "name": "pydantic"
    },
    {
      "importance": 8,
      "name": "mako"
    },
    {
      "importance": 7,
      "name": "pyyaml"
    }
  ]
}
