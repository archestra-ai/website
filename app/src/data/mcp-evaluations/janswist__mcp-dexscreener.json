{
  "name": "dexscreener",
  "slug": "janswist__mcp-dexscreener",
  "description": "Dexscreener API's MCP server - let your AI agent check any on-chain price using Dexscreener's free and open API",
  "readme": "# Dexscreener MCP server\n\nBasic MCP server for Dexscreener API based on their documentation (as of April 4th 2025): https://docs.dexscreener.com/api/reference\n\n## Project setup\n\nInstall all the dependencies\n```\nnpm run install\n```\n\nIf you are using Claude Desktop, after pulling the code open the config file `claude_desktop_config.json` in VSCode:\n- on MacOS:\n\n  ```code ~/Library/Application\\ Support/Claude/claude_desktop_config.json```\n\n- on Windows:\n\n  ```code $env:AppData\\Claude\\claude_desktop_config.json```\n- more info: https://modelcontextprotocol.io/quickstart/server\n\nIn `claude_desktop_config.json` put `dexscreener` object:\n```json\n{\n  \"mcpServers\": {\n    \"dexscreener\": {\n      \"command\": \"node\",\n      \"args\": [\n        \"/ABSOLUTE/PATH/TO/PARENT/FOLDER/index.js\"\n      ]\n    }\n  }\n}\n\n```\n\n## Running the app\n\nYou can use [Inspector](https://modelcontextprotocol.io/docs/tools/inspector) to test the MCP server without using Claude Desktop - both for SDTIO version (default) and SSE version `index-sse.js` (server-sent events - can be hosted on remote server).",
  "category": "Aggregators",
  "qualityScore": 44,
  "githubUrl": "https://github.com/janswist/mcp-dexscreener",
  "programmingLanguage": "JavaScript",
  "gitHubOrg": "janswist",
  "gitHubRepo": "mcp-dexscreener",
  "repositoryPath": null,
  "gh_stars": 9,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "e19f0327dbb3bdf8c22e291684bccbc0c0f4475c",
  "last_scraped_at": "2025-08-04T09:37:13.386Z",
  "implementing_tools": true,
  "implementing_prompts": false,
  "implementing_resources": false,
  "implementing_sampling": false,
  "implementing_roots": false,
  "implementing_logging": false,
  "implementing_stdio": true,
  "implementing_streamable_http": true,
  "implementing_oauth2": false,
  "rawDependencies": "=== package.json ===\n{\n  \"name\": \"dexscreener-mcp-server\",\n  \"version\": \"1.0.0\",\n  \"description\": \"MCP server for DexScreener API\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"dependencies\": {\n    \"@modelcontextprotocol/sdk\": \"^1.8.0\",\n    \"axios\": \"^1.8.4\",\n    \"express\": \"^5.1.0\",\n    \"node-fetch\": \"^3.3.0\",\n    \"zod\": \"^3.21.4\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.11.24\",\n    \"typescript\": \"^5.3.3\"\n  }\n}\n",
  "evaluation_model": "gemini-2.5-flash",
  "configForClients": {
    "mcpServers": {
      "dexscreener-configured": {
        "command": "node",
        "args": ["/ABSOLUTE/PATH/TO/PARENT/FOLDER/index.js"]
      }
    }
  },
  "configForArchestra": {
    "command": "node",
    "args": ["index.js", "--transport", "stdio"],
    "env": {},
    "transport": "stdio",
    "oauth": {}
  },
  "dependencies": [
    {
      "importance": 10,
      "name": "@modelcontextprotocol/sdk"
    },
    {
      "importance": 6,
      "name": "axios"
    },
    {
      "importance": 10,
      "name": "express"
    },
    {
      "importance": 6,
      "name": "node-fetch"
    },
    {
      "importance": 4,
      "name": "zod"
    }
  ]
}
