{
  "dxt_version": "0.1.0",
  "name": "hmk__box-mcp-server",
  "display_name": "box-mcp-server",
  "version": "1.0.0",
  "description": "A Box model context protocol server to search, read and access files",
  "author": {
    "name": "hmk"
  },
  "server": {
    "type": "node",
    "entry_point": "index.js",
    "mcp_config": {
      "command": "unknown",
      "args": [],
      "env": {}
    }
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {},
  "readme": "# box-mcp-server\n\n![CI](https://github.com/hmk/box-mcp-server/actions/workflows/jest.yml/badge.svg?branch=main)\n\n## Usage\n\nYou will need:\n\n- `BOX_USER_ID` \n\nand one of the following:\n\n- `BOX_JWT_BASE64` (recommended)\n- `BOX_JWT_CONFIG_PATH`\n- `BOX_JWT`\n\n## Auth\n\n### JSON Web Token (JWT) Authorization (recommended)\n\n#### How to get a JWT\n\nUsing a JWT Config allows persistent connection to Box.\n\n\nYou will need a paid Box enterprise account, or you can sign up for a [free developer account](https://account.box.com/signup/n/developer) (make sure you are signed out of Box before clicking that link).\n\nVisit the [Box Developer Console](https://app.box.com/developers/console) and create a new application. Make sure the authorization type is JSON Web Token.\n\nGo to `Configuration > Add and Manage Public Keys` and Generate a Public/Private Keypair.\nIf you have not already, Box prompt you to set up 2 factor authentication and Authorize the application as an administrator in your box account. You will need to:\n\n1. give the application `App + Enterprise Access`, and\n2. enable the `make API calls using the as-user header` option\n\nvia the Box Application's Configuration page. **Make sure to reauthorize the application if you are modifying these settings**.\n\n#### Base64 encoding JWT\n\nTo encode your JWT in Base64, you can use the following command in your terminal:\n\n```sh\ncat /path/to/your/box-jwt-config.json | base64\n```\n\nReplace `/path/to/your/box-jwt-config.json` with the actual path to your JWT configuration file. This will output the Base64 encoded JWT which you can then use in your environment variables.\n\n#### Claude Desktop Configuration\n\n```json\n{\n  \"mcpServers\": {\n    \"box\": {\n      \"command\": \"npx\",\n      \"args\": [\"box-mcp-server\"],\n      \"env\": {\n        \"BOX_JWT_BASE64\": \"YOUR_BASE64_ENCODED_JWT\",\n        \"BOX_USER_ID\": \"123456\"\n      }\n    }\n  }\n}\n```\n\n### Developer Token Authorization (easiest)\n\nUsing a developer token is the easiest way to integrate with Box, but will only last 60 minutes.\n\nTo get started, set the `BOX_DEV_TOKEN` to a [Box Developer Token](https://developer.box.com/guides/authentication/tokens/developer-tokens/).\n\nBegin by visiting the [Box Developer Console](https://app.box.com/developers/console) and create a new application. The authorization type does not currently matter, as all support Box Developer Token.\n\nOnce your application is created, navigate to its configuration setings and click `Generate Developer Token`.\n\n#### Claude Desktop Configuration\n\n```json\n{\n  \"mcpServers\": {\n    \"box\": {\n      \"command\": \"npx\",\n      \"args\": [\"box-mcp-server\"],\n      \"env\": {\n        \"BOX_DEV_TOKEN\": \"YOUR_DEV_TOKEN_GOES_HERE\"\n      }\n    }\n  }\n}\n```\n\n## Capabilities\n\n1. Searching files\n2. Reading files\n\n- [x] PDF\n- [x] Word\n- [ ] Others\n\n## Development\n\n### Prerequisites\n\nBefore you begin, ensure you have the following installed:\n\n- Node.js (recommended v22 or higher)\n- npm\n- git\n- dotenv\n\n### Setting up Development Environment\n\nTo set up the development environment, follow these steps:\n\n1. Fork the repository\n\n   - Click the \"Fork\" button in the top-right corner of this repository\n   - This creates your own copy of the repository under your Github acocunt\n\n1. Clone Your Fork:\n\n   ```sh\n   git clone https://github.com/YOUR_USERNAME/box-mcp-server.git\n   cd box-mcp-server\n   ```\n\n1. Add Upstream Remote\n   ```sh\n   git remote add upstream https://github.com/hmk/box-mcp-server.git\n   ```\n\n1. Copy the dotenv file\n    ```sh\n    cp .env.template .env\n    ```\n\n1. Install dependencies:\n\n   ```sh\n   npm install\n   ```\n\n1. Run watch to keep index.js updated:\n\n   ```sh\n   npm run watch\n   ```\n\n1. Start the model context protocol development server:\n\n   ```sh\n   dotenv npx @modelcontextprotocol/inspector node PATH_TO_YOUR_CLONED_REPO/dist/index.js\n   ```\n\n1. If the development server did not load the environment variable correctly, set the `BOX_DEV_TOKEN` on the left-hand side of the mcp inspector.\n",
  "category": "Cloud",
  "quality_score": 48,
  "archestra_config": {
    "client_config_permutations": {
      "mcpServers": {
        "box-mcp-server-jwt-configured": {
          "command": "npx",
          "args": ["box-mcp-server"],
          "env": {
            "BOX_JWT_BASE64": "YOUR_BASE64_ENCODED_JWT",
            "BOX_USER_ID": "123456"
          }
        },
        "box-mcp-server-dev-token-configured": {
          "command": "npx",
          "args": ["box-mcp-server"],
          "env": {
            "BOX_DEV_TOKEN": "YOUR_DEV_TOKEN_GOES_HERE"
          }
        },
        "box-mcp-server-node-dev": {
          "command": "node",
          "args": ["PATH_TO_YOUR_CLONED_REPO/dist/index.js"],
          "env": {}
        }
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "hmk",
    "repo": "box-mcp-server",
    "url": "https://github.com/hmk/box-mcp-server",
    "name": "hmk__box-mcp-server",
    "path": null,
    "stars": 10,
    "contributors": 2,
    "issues": 3,
    "releases": true,
    "ci_cd": true,
    "latest_commit_hash": "209245e0c6ba50014306a23dc18b6200b99a0e9f"
  },
  "programming_language": "JavaScript",
  "framework": null,
  "last_scraped_at": "2025-09-07T22:17:45.350Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": false,
    "implementing_prompts": false,
    "implementing_resources": true,
    "implementing_sampling": false,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": false,
    "implementing_oauth2": true
  },
  "dependencies": [
    {
      "name": "@modelcontextprotocol/sdk",
      "importance": 10
    },
    {
      "name": "box-typescript-sdk-gen",
      "importance": 9
    },
    {
      "name": "mammoth",
      "importance": 7
    },
    {
      "name": "pdfjs-dist",
      "importance": 7
    }
  ],
  "raw_dependencies": "=== package.json ===\n{\n  \"name\": \"box-mcp-server\",\n  \"version\": \"0.3.1\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.js\",\n  \"type\": \"module\",\n  \"access\": \"public\",\n  \"bin\": {\n    \"box-mcp-server\": \"dist/index.js\"\n  },\n  \"scripts\": {\n    \"clean\": \"shx rm -rf dist\",\n    \"build\": \"tsc && shx chmod +x dist/*.js\",\n    \"prepare\": \"npm run build\",\n    \"watch\": \"tsc --watch\",\n    \"prepublishOnly\": \"npm run build\",\n    \"test\": \"jest\",\n    \"test:watch\": \"jest --watch\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"dependencies\": {\n    \"@modelcontextprotocol/sdk\": \"^1.0.4\",\n    \"box-typescript-sdk-gen\": \"^1.9.0\",\n    \"mammoth\": \"^1.9.0\",\n    \"patch-package\": \"^8.0.0\",\n    \"pdfjs-dist\": \"^4.9.155\",\n    \"postinstall-postinstall\": \"^2.1.0\",\n    \"shx\": \"^0.3.4\",\n    \"typescript\": \"^5.7.2\"\n  },\n  \"keywords\": [],\n  \"author\": \"@hmk\",\n  \"license\": \"BSD-3-Clause\",\n  \"description\": \"MCP Server for interacting with Box\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/hmk/box-mcp-server.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/hmk/box-mcp-server/issues\"\n  },\n  \"homepage\": \"https://github.com/hmk/box-mcp-server#readme\",\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.14\",\n    \"@types/pdfjs-dist\": \"^2.10.378\",\n    \"jest\": \"^29.7.0\",\n    \"ts-jest\": \"^29.2.5\",\n    \"tsx\": \"^4.19.2\"\n  },\n  \"jest\": {\n    \"preset\": \"ts-jest\",\n    \"testEnvironment\": \"node\",\n    \"testPathIgnorePatterns\": [\n      \"<rootDir>/dist/\"\n    ]\n  }\n}\n"
}
