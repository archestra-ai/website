{
  "dxt_version": "0.1.0",
  "name": "iaptic__mcp-server-iaptic",
  "display_name": "mcp-server-iaptic",
  "version": "1.0.0",
  "description": " Model Context Protocol server for interacting with iaptic",
  "author": {
    "name": "iaptic"
  },
  "server": {
    "command": "npx",
    "args": ["mcp-server-iaptic", "--api-key", "${user_config.api_key}", "--app-name", "${user_config.app_name}"],
    "env": {}
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {
    "api_key": {
      "type": "string",
      "title": "Iaptic API Key",
      "description": "Your API key for interacting with the Iaptic API.",
      "sensitive": true,
      "required": true
    },
    "app_name": {
      "type": "string",
      "title": "Iaptic App Name",
      "description": "The name of your Iaptic application.",
      "sensitive": false,
      "required": true
    }
  },
  "readme": "# MCP Server for Iaptic\n[![smithery badge](https://smithery.ai/badge/mcp-server-iaptic)](https://smithery.ai/server/mcp-server-iaptic)\n\nA Model Context Protocol server for interacting with the [Iaptic API](https://www.iaptic.com). This server allows Claude or other AIs to interact with your Iaptic data to answer questions about your customers, purchases, transactions, and statistics.\n\n## Installation\n\n### Installing via Smithery\n\nTo install Iaptic for Claude Desktop automatically via [Smithery](https://smithery.ai/server/mcp-server-iaptic):\n\n```bash\nnpx -y @smithery/cli install mcp-server-iaptic --client claude\n```\n\n### Manual Installation\n```bash\n# Run directly with npx\nnpx mcp-server-iaptic --api-key YOUR_API_KEY --app-name YOUR_APP_NAME\n\n# Or install globally\nnpm install -g mcp-server-iaptic\nmcp-server-iaptic --api-key YOUR_API_KEY --app-name YOUR_APP_NAME\n```\n\n## Usage with Claude Desktop\n\nAdd to your Claude Desktop configuration file:\n\n```json\n{\n  \"iaptic\": {\n    \"command\": \"npx\",\n    \"args\": [\n      \"mcp-server-iaptic\",\n      \"--api-key\", \"your-api-key-here\",\n      \"--app-name\", \"your-app-name-here\"\n    ]\n  }\n}\n```\n\n## Available Tools\n\n### Customers\n- `customer_list`: List customers\n- `customer_get`: Get customer details by ID\n\n### Purchases\n- `purchase_list`: List purchases\n  - `limit`: Maximum number of purchases to return (default: 100, max: 1000)\n  - `offset`: Number of purchases to skip for pagination\n  - `startdate`: Filter purchases after this date (ISO format, e.g. 2024-01-01)\n  - `enddate`: Filter purchases before this date (ISO format, e.g. 2024-12-31)\n  - `customerId`: Filter by customer ID\n- `purchase_get`: Get purchase details by ID\n\n### Transactions\n- `transaction_list`: List transactions with pagination and date filtering\n  - `limit`: Maximum number of transactions to return (default: 100, max: 1000)\n  - `offset`: Number of transactions to skip for pagination\n  - `startdate`: Filter transactions after this date (ISO format, e.g. 2024-01-01)\n  - `enddate`: Filter transactions before this date (ISO format, e.g. 2024-12-31)\n  - `purchaseId`: Filter by purchase ID\n- `transaction_get`: Get transaction details by ID\n\n### Statistics\n- `stats_get`: Get general statistics about transactions and revenue\n- `stats_app`: Get app-specific statistics\n\n### Events\n- `event_list`: List recent events with pagination and date filtering\n  - `limit`: Maximum number of events to return (default: 100)\n  - `offset`: Number of events to skip for pagination\n  - `startdate`: Filter events after this date (ISO format, e.g. 2024-01-01)\n  - `enddate`: Filter events before this date (ISO format, e.g. 2024-12-31)\n\n### App Management\n- `iaptic_switch_app`: Switch to a different Iaptic app\n  - `appName`: Name of the app to switch to\n  - `apiKey`: API key for the app\n- `iaptic_reset_app`: Reset to the default Iaptic app\n- `iaptic_current_app`: Get information about the currently active app\n\n## Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Run in development mode\nnpm run dev\n\n# Build for production\nnpm run build\n\n# Run production build\nnpm start\n```\n\n## Requirements\n\n- Node.js >= 18\n- An Iaptic account with API credentials\n\n## License\n\nMIT \n",
  "category": "CRM",
  "quality_score": 50,
  "archestra_config": {
    "client_config_permutations": {
      "mcp-server-iaptic": {
        "command": "npx",
        "args": ["mcp-server-iaptic", "--api-key", "YOUR_API_KEY", "--app-name", "YOUR_APP_NAME"],
        "env": {}
      },
      "mcp-server-iaptic-global": {
        "command": "mcp-server-iaptic",
        "args": ["--api-key", "YOUR_API_KEY", "--app-name", "YOUR_APP_NAME"],
        "env": {}
      },
      "mcp-server-iaptic-configured": {
        "command": "npx",
        "args": ["mcp-server-iaptic", "--api-key", "your-api-key-here", "--app-name", "your-app-name-here"],
        "env": {}
      },
      "mcp-server-iaptic-dev": {
        "command": "npm",
        "args": ["run", "dev"],
        "env": {}
      },
      "mcp-server-iaptic-prod": {
        "command": "npm",
        "args": ["start"],
        "env": {}
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "iaptic",
    "repo": "mcp-server-iaptic",
    "url": "https://github.com/iaptic/mcp-server-iaptic",
    "name": "iaptic__mcp-server-iaptic",
    "path": null,
    "stars": 4,
    "contributors": 2,
    "issues": 0,
    "releases": false,
    "ci_cd": false,
    "latest_commit_hash": "210c73ccb12bb61676dbb23302f16a2d408c4f05"
  },
  "programming_language": "TypeScript",
  "framework": null,
  "last_scraped_at": "2025-09-09T13:05:25.029Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": true,
    "implementing_sampling": false,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": false,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "@modelcontextprotocol/sdk",
      "importance": 10
    },
    {
      "name": "axios",
      "importance": 8
    },
    {
      "name": "dotenv",
      "importance": 6
    }
  ],
  "raw_dependencies": "=== package.json ===\n{\n  \"name\": \"mcp-server-iaptic\",\n  \"description\": \"Iaptic server for Model Context Protocol\",\n  \"author\": \"Jean-Christophe Hoelt <hoelt@iaptic.com>\",\n  \"version\": \"1.0.1\",\n  \"type\": \"module\",\n  \"bin\": {\n    \"mcp-server-iaptic\": \"./dist/server.js\"\n  },\n  \"files\": [\n    \"dist\",\n    \"src\",\n    \"package.json\",\n    \"package-lock.json\",\n    \"tsconfig.json\",\n    \"README.md\",\n    \"LICENSE\"\n  ],\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"dependencies\": {\n    \"@modelcontextprotocol/sdk\": \"latest\",\n    \"axios\": \"^1.6.0\",\n    \"dotenv\": \"^16.0.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.17.14\",\n    \"ts-node\": \"^10.9.2\",\n    \"typescript\": \"^5.0.0\"\n  },\n  \"scripts\": {\n    \"prepublishOnly\": \"npm run build\",\n    \"build\": \"tsc\",\n    \"start\": \"node --loader ts-node/esm src/server.ts\",\n    \"dev\": \"node --loader ts-node/esm src/server.ts\"\n  }\n}\n"
}
