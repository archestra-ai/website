{
  "name": "esxi",
  "slug": "bright8192__esxi-mcp-server",
  "description": "A VMware ESXi/vCenter management server based on MCP (Model Control Protocol), providing simple REST API interfaces for virtual machine management.",
  "readme": "# ESXi MCP Server\n\nA VMware ESXi/vCenter management server based on MCP (Model Control Protocol), providing simple REST API interfaces for virtual machine management.\n\n## Features\n\n- Support for ESXi and vCenter Server connections\n- Real-time communication based on SSE (Server-Sent Events)\n- RESTful API interface with JSON-RPC support\n- API key authentication\n- Complete virtual machine lifecycle management\n- Real-time performance monitoring\n- SSL/TLS secure connection support\n- Flexible configuration options (YAML/JSON/Environment Variables)\n\n## Core Functions\n\n- Virtual Machine Management\n  - Create VM\n  - Clone VM\n  - Delete VM\n  - Power On/Off operations\n  - List all VMs\n- Performance Monitoring\n  - CPU usage\n  - Memory usage\n  - Storage usage\n  - Network traffic statistics\n\n## Requirements\n\n- Python 3.7+\n- pyVmomi\n- PyYAML\n- uvicorn\n- mcp-core (Machine Control Protocol core library)\n\n## Quick Start\n\n1. Install dependencies:\n\n```bash\npip install pyvmomi pyyaml uvicorn mcp-core\n```\n\n2. Create configuration file `config.yaml`:\n\n```yaml\nvcenter_host: \"your-vcenter-ip\"\nvcenter_user: \"administrator@vsphere.local\"\nvcenter_password: \"your-password\"\ndatacenter: \"your-datacenter\"        # Optional\ncluster: \"your-cluster\"              # Optional\ndatastore: \"your-datastore\"          # Optional\nnetwork: \"VM Network\"                # Optional\ninsecure: true                       # Skip SSL certificate verification\napi_key: \"your-api-key\"             # API access key\nlog_file: \"./logs/vmware_mcp.log\"   # Log file path\nlog_level: \"INFO\"                    # Log level\n```\n\n3. Run the server:\n\n```bash\npython server.py -c config.yaml\n```\n\n## API Interface\n\n### Authentication\n\nAll privileged operations require authentication first:\n\n```http\nPOST /sse/messages\nAuthorization: Bearer your-api-key\n```\n\n### Main Tool Interfaces\n\n1. Create VM\n```json\n{\n    \"name\": \"vm-name\",\n    \"cpu\": 2,\n    \"memory\": 4096,\n    \"datastore\": \"datastore-name\",\n    \"network\": \"network-name\"\n}\n```\n\n2. Clone VM\n```json\n{\n    \"template_name\": \"source-vm\",\n    \"new_name\": \"new-vm-name\"\n}\n```\n\n3. Delete VM\n```json\n{\n    \"name\": \"vm-name\"\n}\n```\n\n4. Power Operations\n```json\n{\n    \"name\": \"vm-name\"\n}\n```\n\n### Resource Monitoring Interface\n\nGet VM performance data:\n```http\nGET vmstats://{vm_name}\n```\n\n## Configuration\n\n| Parameter | Description | Required | Default |\n|-----------|-------------|----------|---------|\n| vcenter_host | vCenter/ESXi server address | Yes | - |\n| vcenter_user | Login username | Yes | - |\n| vcenter_password | Login password | Yes | - |\n| datacenter | Datacenter name | No | Auto-select first |\n| cluster | Cluster name | No | Auto-select first |\n| datastore | Storage name | No | Auto-select largest available |\n| network | Network name | No | VM Network |\n| insecure | Skip SSL verification | No | false |\n| api_key | API access key | No | - |\n| log_file | Log file path | No | Console output |\n| log_level | Log level | No | INFO |\n\n## Environment Variables\n\nAll configuration items support environment variable settings, following these naming rules:\n- VCENTER_HOST\n- VCENTER_USER\n- VCENTER_PASSWORD\n- VCENTER_DATACENTER\n- VCENTER_CLUSTER\n- VCENTER_DATASTORE\n- VCENTER_NETWORK\n- VCENTER_INSECURE\n- MCP_API_KEY\n- MCP_LOG_FILE\n- MCP_LOG_LEVEL\n\n## Security Recommendations\n\n1. Production Environment:\n   - Use valid SSL certificates\n   - Enable API key authentication\n   - Set appropriate log levels\n   - Restrict API access scope\n\n2. Testing Environment:\n   - Set insecure: true to skip SSL verification\n   - Use more detailed log level (DEBUG)\n\n## License\n\nMIT License\n\n## Contributing\n\nIssues and Pull Requests are welcome!\n\n## Changelog\n\n### v0.0.1\n- Initial release\n- Basic VM management functionality\n- SSE communication support\n- API key authentication\n- Performance monitoring\n\n## Author\n\nBright8192\n\n## Acknowledgments\n\n- VMware pyvmomi team\n- MCP Protocol development team\n",
  "category": "Cloud",
  "qualityScore": 51,
  "githubUrl": "https://github.com/bright8192/esxi-mcp-server",
  "programmingLanguage": "Python",
  "gitHubOrg": "bright8192",
  "gitHubRepo": "esxi-mcp-server",
  "repositoryPath": null,
  "gh_stars": 33,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "a2f4c709c5eb6d2fa47a7a2239e666f6ec53abfa",
  "last_scraped_at": "2025-08-04T09:32:41.602Z",
  "implementing_tools": true,
  "implementing_prompts": false,
  "implementing_resources": true,
  "implementing_sampling": false,
  "implementing_roots": false,
  "implementing_logging": true,
  "implementing_stdio": false,
  "implementing_streamable_http": true,
  "implementing_oauth2": false,
  "rawDependencies": "=== requirements.txt ===\npyvmomi>=7.0\npyyaml>=6.0\nuvicorn>=0.15.0\nmcp\npytest>=7.0.0",
  "evaluation_model": "gemini-2.5-pro",
  "configForClients": {
    "mcpServers": {
      "esxi-mcp-server": {
        "command": "python",
        "args": [
          "server.py",
          "-c",
          "config.yaml"
        ]
      }
    }
  },
  "configForArchestra": {
    "command": "python",
    "args": [
      "server.py"
    ],
    "env": {
      "server-configured": "MCP_API_KEY"
    },
    "transport": "http",
    "oauth": {
      "provider": "api_key",
      "required": false
    }
  },
  "dependencies": [
    {
      "importance": 10,
      "name": "mcp"
    },
    {
      "importance": 9,
      "name": "pyvmomi"
    },
    {
      "importance": 8,
      "name": "uvicorn"
    },
    {
      "importance": 5,
      "name": "pyyaml"
    }
  ]
}