{
  "dxt_version": "0.1.0",
  "name": "orellazri__coda-mcp",
  "display_name": "coda-mcp",
  "version": "1.0.0",
  "description": "MCP Server for Coda",
  "author": {
    "name": "orellazri"
  },
  "server": {
    "command": "npx",
    "args": ["-y", "coda-mcp@latest"],
    "env": {
      "API_KEY": "${user_config.api_key}"
    }
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {
    "api_key": {
      "type": "string",
      "title": "Coda API Key",
      "description": "Your Coda API key. You can generate one from your Coda account settings.",
      "sensitive": true,
      "required": true
    }
  },
  "readme": "# Coda MCP Server\n\nThis project implements a Model Context Protocol (MCP) server that acts as a bridge to interact with the [Coda](https://coda.io/) API. It allows an MCP client (like an AI assistant) to perform actions on Coda pages, such as listing, creating, reading, updating, duplicating, and renaming.\n\n## Features\n\nThe server exposes the following tools to the MCP client:\n\n- **`coda_list_documents`**: Lists all documents available to the user.\n- **`coda_list_pages`**: Lists all pages within the configured Coda document with pagination support.\n- **`coda_create_page`**: Creates a new page in the document, optionally under a specified parent page (creating a subpage) and populating it with initial markdown content.\n- **`coda_get_page_content`**: Retrieves the content of a specified page (by ID or name) as markdown.\n- **`coda_replace_page_content`**: Replaces the content of a specified page with new markdown content.\n- **`coda_append_page_content`**: Appends new markdown content to the end of a specified page.\n- **`coda_duplicate_page`**: Creates a copy of an existing page with a new name.\n- **`coda_rename_page`**: Renames an existing page.\n- **`coda_peek_page`**: Peek into the beginning of a page and return a limited number of lines.\n- **`coda_resolve_link`**: Resolve metadata given a browser link to a Coda object.\n\n## Usage\n\nAdd the MCP server to Cursor/Claude Desktop/etc. like so:\n\n```json\n{\n  \"mcpServers\": {\n    \"coda\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"coda-mcp@latest\"],\n      \"env\": {\n        \"API_KEY\": \"...\"\n      }\n    }\n  }\n}\n```\n\nRequired environment variables:\n\n- `API_KEY`: Your Coda API key. You can generate one from your Coda account settings.\n\nThis MCP server is also available with Docker, like so:\n\n```json\n{\n  \"mcpServers\": {\n    \"coda\": {\n      \"command\": \"docker\",\n      \"args\": [\"run\", \"-i\", \"--rm\", \"-e\", \"API_KEY\", \"reaperberri/coda-mcp:latest\"],\n      \"env\": {\n        \"API_KEY\": \"...\"\n      }\n    }\n  }\n}\n```\n\n## Local Setup\n\n1.  **Prerequisites:**\n\n    - Node.js\n    - pnpm\n\n2.  **Clone the repository:**\n\n    ```bash\n    git clone <repository-url>\n    cd coda-mcp\n    ```\n\n3.  **Install dependencies:**\n\n    ```bash\n    pnpm install\n    ```\n\n4.  **Build the project:**\n    ```bash\n    pnpm build\n    ```\n    This compiles the TypeScript code to JavaScript in the `dist/` directory.\n\n## Running the Server\n\nThe MCP server communicates over standard input/output (stdio). To run it, set the environment variables and run the compiled JavaScript file - `dist/index.js`.\n",
  "category": "Knowledge",
  "quality_score": 52,
  "archestra_config": {
    "client_config_permutations": {
      "coda-mcp": {
        "command": "npx",
        "args": ["-y", "coda-mcp@latest"],
        "env": {
          "API_KEY": "..."
        }
      },
      "reaperberri-coda-mcp-docker": {
        "command": "docker",
        "args": ["run", "-i", "--rm", "-e", "API_KEY", "reaperberri/coda-mcp:latest"],
        "env": {
          "API_KEY": "..."
        }
      },
      "coda-mcp-stdio": {
        "command": "node",
        "args": ["dist/index.js"],
        "env": {
          "API_KEY": "..."
        }
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "orellazri",
    "repo": "coda-mcp",
    "url": "https://github.com/orellazri/coda-mcp",
    "name": "coda-mcp",
    "path": null,
    "stars": 17,
    "contributors": 3,
    "issues": 0,
    "releases": true,
    "ci_cd": true,
    "latest_commit_hash": "028a2abb3a6d12ee1583a17c77369ff4dccb6a81"
  },
  "programming_language": "TypeScript",
  "framework": null,
  "last_scraped_at": "2025-08-03T21:03:23.975Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": false,
    "implementing_sampling": false,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": false,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "@hey-api/client-axios",
      "importance": 7
    },
    {
      "name": "@modelcontextprotocol/sdk",
      "importance": 10
    },
    {
      "name": "axios",
      "importance": 6
    },
    {
      "name": "zod",
      "importance": 5
    }
  ],
  "raw_dependencies": "=== package.json ===\n{\n  \"name\": \"coda-mcp\",\n  \"version\": \"1.5.0\",\n  \"description\": \"MCP Server for Coda\",\n  \"repository\": {\n    \"url\": \"https://github.com/orellazri/coda-mcp\"\n  },\n  \"bin\": {\n    \"coda\": \"./dist/index.js\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsc && chmod 755 dist/index.js\",\n    \"lint\": \"eslint .\",\n    \"format\": \"prettier --write .\",\n    \"test\": \"vitest run --coverage\",\n    \"test:watch\": \"vitest\",\n    \"openapi-ts\": \"openapi-ts\",\n    \"inspect\": \"pnpm dlx @modelcontextprotocol/inspector dist/index.js\"\n  },\n  \"dependencies\": {\n    \"@hey-api/client-axios\": \"^0.7.0\",\n    \"@modelcontextprotocol/sdk\": \"^1.11.2\",\n    \"axios\": \"^1.9.0\",\n    \"zod\": \"^3.24.4\"\n  },\n  \"devDependencies\": {\n    \"@eslint/js\": \"^9.26.0\",\n    \"@hey-api/openapi-ts\": \"^0.67.3\",\n    \"@types/node\": \"^22.15.17\",\n    \"@vitest/coverage-v8\": \"3.1.4\",\n    \"eslint\": \"^9.26.0\",\n    \"globals\": \"^16.1.0\",\n    \"mcp-testing-kit\": \"^0.2.0\",\n    \"prettier\": \"^3.5.3\",\n    \"typescript\": \"^5.8.3\",\n    \"typescript-eslint\": \"^8.32.1\",\n    \"vitest\": \"^3.1.4\"\n  },\n  \"packageManager\": \"pnpm@10.9.0\"\n}\n"
}
