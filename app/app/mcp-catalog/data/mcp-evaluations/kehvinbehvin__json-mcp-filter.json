{
  "dxt_version": "0.1.0",
  "name": "kehvinbehvin__json-mcp-filter",
  "display_name": "json-mcp-filter",
  "version": "1.0.0",
  "description": "JSON MCP server to filter only relevant data for your LLM",
  "author": {
    "name": "kehvinbehvin"
  },
  "server": {
    "type": "node",
    "entry_point": "index.js",
    "mcp_config": {
      "command": "npx",
      "args": ["-y", "json-mcp-filter@latest"],
      "env": {}
    }
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {},
  "readme": "# JSON MCP Filter\n\nA Model Context Protocol (MCP) server that provides JSON schema generation and filtering tools. This server uses [quicktype](https://github.com/quicktype/quicktype) to convert JSON samples into TypeScript type definitions and offers JSON data filtering capabilities.\n\nParticulary helpful for JSON files that are on the larger side which contains data you don't want included in your LLM context. \n\n## Features\n\n- **JSON Schema Generation**: Convert JSON files into TypeScript type definitions using quicktype-core\n- **JSON Filtering**: Extract specific fields from JSON data using shape-based filtering\n- **MCP Integration**: Seamlessly integrates with Claude Desktop and Claude Code\n- **Type Safety**: Built with TypeScript and includes comprehensive error handling\n\n## Tools Provided\n\n### `json_schema`\nGenerates TypeScript type definitions from JSON files.\n\n**Parameters:**\n- `filePath`: Path to the JSON file to analyze\n\n**Example:**\n```json\n{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\n```\nGenerates TypeScript interfaces with proper typing.\n\n### `json_filter`\nExtracts specific fields from JSON data using a shape definition.\n\n**Parameters:**\n- `filePath`: Path to the JSON file to filter\n- `shape`: Shape object defining which fields to extract\n\n**Shape Examples:**\n```javascript\n// Extract single field\n{\"name\": true}\n\n// Extract multiple fields\n{\"name\": true, \"age\": true}\n\n// Extract nested fields\n{\"user\": {\"name\": true, \"email\": true}}\n\n// Extract from arrays (applies to each item)\n{\"users\": {\"name\": true, \"age\": true}}\n```\n\n## Installation\n\n### Quick Start (Recommended)\n\n```bash\n# Using npx (no installation required)\nnpx json-mcp-filter@latest\n\n# Or install globally\nnpm install -g json-mcp-filter@latest\njson-mcp-server\n```\n\n### From Source\n\n1. Clone this repository:\n```bash\ngit clone <repository-url>\ncd json-mcp-filter\n```\n\n2. Install dependencies:\n```bash\nnpm install\n```\n\n3. Build the server:\n```bash\nnpm run build\n```\n\n## Setup for Claude Desktop\n\nAdd this server to your Claude Desktop configuration file:\n\n### macOS\n```json\n{\n  \"mcpServers\": {\n    \"json-mcp-filter\": {\n      \"command\": \"node\",\n      \"args\": [\"/path/to/json-mcp-filter/build/index.js\"]\n    }\n  }\n}\n```\n\n## Setup for Claude Code\n\nAdd this server to your Claude Code MCP settings:\n\nAdd a new server with:\n   - **Name**: `json-mcp-filter`\n   - **Command**: `node`\n   - **Args**: `[\"/path/to/json-mcp-filter/build/index.js\"]`\n\n\nOr, use the `npx` method for easier setup:\n```json\n{\n  \"mcpServers\": {\n    \"json-mcp-filter\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"json-mcp-filter@latest\"]\n    }\n  }\n}\n```\nOr\nclaude mcp add json-mcp-filter node /path/to/json-mcp-filter/build/index.js\n\n## Development\n\n### Scripts\n- `npm run build` - Compile TypeScript and make executable\n- `npm run start` - Run the compiled server\n- `npm run inspect` - Run with MCP inspector for debugging\n- `npx tsc --noEmit` - Type check without emitting files\n\n### Testing\nTest the server using the MCP inspector:\n```bash\nnpm run inspect\n```\n\nThis will start the server with the MCP inspector interface for interactive testing.\n\n## Project Structure\n\n```\nsrc/\n  index.ts          # Main server implementation with tools\ntest/\n  test.json         # Sample JSON file for testing\nbuild/              # Compiled TypeScript output\n```\n\n## Error Handling\n\nThe server includes error handling for:\n- File not found errors\n- Invalid JSON format\n- Quicktype processing errors\n- Shape filtering errors",
  "category": "AI Tools",
  "quality_score": 43,
  "archestra_config": {
    "client_config_permutations": {
      "mcpServers": {
        "json-mcp-filter-npx": {
          "command": "npx",
          "args": ["-y", "json-mcp-filter@latest"],
          "env": {}
        },
        "json-mcp-filter-global": {
          "command": "json-mcp-server",
          "args": [],
          "env": {}
        },
        "json-mcp-filter-source-start": {
          "command": "npm",
          "args": ["run", "start"],
          "env": {}
        },
        "json-mcp-filter-node-path": {
          "command": "node",
          "args": ["/path/to/json-mcp-filter/build/index.js"],
          "env": {}
        },
        "json-mcp-filter-inspect": {
          "command": "npm",
          "args": ["run", "inspect"],
          "env": {}
        }
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "kehvinbehvin",
    "repo": "json-mcp-filter",
    "url": "https://github.com/kehvinbehvin/json-mcp-filter",
    "name": "json-mcp-filter",
    "path": null,
    "stars": 5,
    "contributors": 1,
    "issues": 0,
    "releases": false,
    "ci_cd": true,
    "latest_commit_hash": "fe3d1bfd4171b6fe2820f3d52d89159e04ffc16a"
  },
  "programming_language": "JavaScript",
  "framework": null,
  "last_scraped_at": "2025-08-04T10:40:51.757Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": false,
    "implementing_sampling": false,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": false,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "@modelcontextprotocol/sdk",
      "importance": 10
    },
    {
      "name": "quicktype-core",
      "importance": 9
    },
    {
      "name": "zod",
      "importance": 7
    }
  ],
  "raw_dependencies": "=== package.json ===\n{\n  \"name\": \"@kehvinbehvin/json-mcp-filter\",\n  \"version\": \"1.0.2\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/kehvinbehvin/json-mcp-filter.git\"\n  },\n  \"publishConfig\": {\n    \"registry\": \"https://npm.pkg.github.com\"\n  },\n  \"main\": \"build/index.js\",\n  \"type\": \"module\",\n  \"bin\": {\n    \"json-mcp-server\": \"./build/index.js\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc && chmod 755 build/index.js\",\n    \"start\": \"node build/index.js\",\n    \"inspect\": \"npx @modelcontextprotocol/inspector node build/index.js\"\n  },\n  \"files\": [\n    \"build\",\n    \"src\",\n    \"README.md\"\n  ],\n  \"keywords\": [\n    \"mcp\",\n    \"model-context-protocol\",\n    \"json\",\n    \"schema\",\n    \"typescript\",\n    \"quicktype\",\n    \"json-filter\",\n    \"claude\"\n  ],\n  \"author\": \"Kevin\",\n  \"license\": \"MIT\",\n  \"description\": \"MCP server providing JSON schema generation and filtering tools using quicktype\",\n  \"dependencies\": {\n    \"@modelcontextprotocol/sdk\": \"^1.17.1\",\n    \"quicktype-core\": \"^23.2.6\",\n    \"zod\": \"^3.25.76\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^24.1.0\",\n    \"typescript\": \"^5.9.2\"\n  }\n}\n"
}
