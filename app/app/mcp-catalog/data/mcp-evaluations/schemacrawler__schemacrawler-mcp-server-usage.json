{
  "dxt_version": "0.1.0",
  "name": "schemacrawler__schemacrawler-mcp-server-usage",
  "display_name": "SchemaCrawler-MCP-Server-Usage",
  "version": "1.0.0",
  "description": "Find out how to use SchemaCrawler AI MCP Server",
  "author": {
    "name": "schemacrawler"
  },
  "server": {
    "command": "docker",
    "args": ["compose", "-f", "schemacrawler-mcpserver.yaml", "up", "-d"],
    "env": {}
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {},
  "readme": "<!-- markdownlint-disable MD041 -->\n[![Docker Pulls](https://img.shields.io/docker/pulls/schemacrawler/schemacrawler?color=FFDAB9)](https://hub.docker.com/r/schemacrawler/schemacrawler/)\n![GitHub Repo stars](https://img.shields.io/github/stars/schemacrawler/schemacrawler?style=social)\n\n\n# <img src=\"https://raw.githubusercontent.com/schemacrawler/SchemaCrawler/main/schemacrawler-website/src/site/resources/images/schemacrawler_logo.png\" height=\"100px\" width=\"100px\" valign=\"middle\"/> SchemaCrawler AI MCP Server: Usage\n\n> [!NOTE]  \n> * Please see the [SchemaCrawler website](https://www.schemacrawler.com/) for more details.\n> * Explore the SchemaCrawler command-line with a [live online tutorial](https://killercoda.com/schemacrawler).\n\n## About\n\nSchemaCrawler is a free database schema discovery and comprehension tool. SchemaCrawler has a good mix of useful features for data governance. You can [search for database schema objects](https://www.schemacrawler.com/schemacrawler-grep.html) using regular expressions, and output the schema and data in a readable text format.\n\nThis is a bare project that acts as an MCP client for the [SchemaCrawler AI MCP Server](https://github.com/schemacrawler/SchemaCrawler-AI) for use in \"Agent\" mode. You can find documentation on how to use the server here.\n\nThe SchemaCrawler AI MCP Server is available on [the Docker MCP Catalog](https://hub.docker.com/mcp/server/schemacrawler-ai/overview) as a Docker-verified image.\n\n\n## Prerequisites\n\n1. Install supporting software\n   - Docker\n   - Docker Compose\n   - Visual Studio Code\n2. Read [Use MCP servers in VS Code](https://code.visualstudio.com/docs/copilot/chat/mcp-servers)\n3. Clone this project, and open it in Visual Studio Code\n\n\n## Getting Started\n\nRefer to the [getting started](../docs/getting-started.md) documentation.\n",
  "category": "Development",
  "quality_score": 49,
  "archestra_config": {
    "client_config_permutations": {
      "schemacrawler-schemacrawler-ai-docker": {
        "command": "docker",
        "args": ["compose", "-f", "schemacrawler-mcpserver.yaml", "up", "-d"],
        "env": {}
      },
      "schemacrawler-schemacrawler-ai-docker-configured": {
        "command": "docker",
        "args": ["compose", "-f", "schemacrawler-mcpserver.yaml", "up", "-d"],
        "env": {}
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "schemacrawler",
    "repo": "SchemaCrawler-MCP-Server-Usage",
    "url": "https://github.com/schemacrawler/SchemaCrawler-MCP-Server-Usage",
    "name": "schemacrawler__schemacrawler-mcp-server-usage",
    "path": null,
    "stars": 5,
    "contributors": 2,
    "issues": 0,
    "releases": false,
    "ci_cd": false,
    "latest_commit_hash": "a1bab27155822cc8bd63be6609f0c8f22bd48c95"
  },
  "programming_language": "Unknown",
  "framework": null,
  "last_scraped_at": "2025-09-09T13:05:31.943Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": true,
    "implementing_sampling": true,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": false,
    "implementing_streamable_http": true,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "modelcontextprotocol",
      "importance": 10
    },
    {
      "name": "schemacrawler",
      "importance": 9
    },
    {
      "name": "jdbc-drivers",
      "importance": 8
    }
  ],
  "raw_dependencies": null
}
