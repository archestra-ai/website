{
  "name": "trino",
  "slug": "dataring-engineering__mcp-server-trino",
  "description": "MCP Server for Trino",
  "readme": "# Trino MCP Server\n\nThis repository provides an MCP (Model-Control-Protocol) server that allows you to list and query tables via Trino using Python.\n\n## Overview\n\n- MCP: MCP is a protocol for bridging AI models, data, and tools. This example MCP server provides:\n    - A list of Trino tables as MCP resources\n    - Ability to read table contents through MCP\n    - A tool for executing arbitrary SQL queries against Trino\n- Trino: A fast, distributed SQL query engine for big data analytics. This server makes use of Trinoâ€™s Python client (trino.dbapi) to connect to a Trino host, catalog, and schema.\n\n## Requirements\n\n- Python 3.9+ (or a version compatible with mcp, trino, and asyncio)\n- trino (the Python driver for Trino)\n- mcp (the Model-Control-Protocol Python library)\n\n## Configuration\n\nThe server reads Trino connection details from environment variables:\n\n| Variable         | Description                                                          | Default     |\n|------------------|----------------------------------------------------------------------|------------|\n| `TRINO_HOST`     | Trino server hostname or IP                                          | `localhost`|\n| `TRINO_PORT`     | Trino server port                                                    | `8080`     |\n| `TRINO_USER`     | Trino user name                                                      | *required* |\n| `TRINO_PASSWORD` | Trino password (optional, depends on your authentication setup)      | (empty)    |\n| `TRINO_CATALOG`  | Default catalog to use (e.g., `hive`, `tpch`, `postgresql`, etc.)    | *required* |\n| `TRINO_SCHEMA`   | Default schema to use (e.g., `default`, `public`, etc.)             | *required* |\n\n## Usage\n\n``` json\n{\n  \"mcpServers\": {\n    \"trino\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\", \n        \"<path_to_mcp_server_trino>\",\n        \"run\",\n        \"mcp_server_trino\"\n      ],\n      \"env\": {\n        \"TRINO_HOST\": \"<host>\",\n        \"TRINO_PORT\": \"<port>\",\n        \"TRINO_USER\": \"<user>\",\n        \"TRINO_PASSWORD\": \"<password>\",\n        \"TRINO_CATALOG\": \"<catalog>\",\n        \"TRINO_SCHEMA\": \"<schema>\"\n      }\n    }\n  }\n}\n\n```",
  "category": "Development",
  "qualityScore": 48,
  "githubUrl": "https://github.com/Dataring-engineering/mcp-server-trino",
  "programmingLanguage": "Python",
  "gitHubOrg": "Dataring-engineering",
  "gitHubRepo": "mcp-server-trino",
  "repositoryPath": null,
  "gh_stars": 17,
  "gh_contributors": 1,
  "gh_issues": 0,
  "gh_releases": false,
  "gh_ci_cd": false,
  "gh_latest_commit_hash": "9acf767475353e868a51c2fb05a82ec7d508bdb1",
  "last_scraped_at": "2025-08-04T09:34:00.356Z",
  "implementing_tools": true,
  "implementing_prompts": false,
  "implementing_resources": true,
  "implementing_sampling": false,
  "implementing_roots": false,
  "implementing_logging": false,
  "implementing_stdio": true,
  "implementing_streamable_http": false,
  "implementing_oauth2": false,
  "rawDependencies": "=== pyproject.toml ===\n[project]\nname = \"mcp_server_trino\"\nversion = \"0.1.1\"\ndescription = \"A Model Context Protocol (MCP) server that enables secure interaction with Trino. This server allows AI assistants to list tables, read data, and execute SQL queries through a controlled interface, making data exploration and analysis safer and more structured.\"\nreadme = \"README.md\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"mcp>=1.0.0\",\n    \"trino==0.333.0\",\n]\n[[project.authors]]\nname = \"Mahesh Premachandran\"\nemail = \"mahesh@getdataring.com\"\n\n[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[project.scripts]\nmcp_server_trino = \"mcp_server_trino:main\"\n\n=== requirements.txt ===\nmcp>=1.0.0\ntrino",
  "evaluation_model": "gemini-2.5-flash",
  "configForClients": {
    "mcpServers": {
      "mcp_server_trino": {
        "command": "uv",
        "args": [
          "--directory",
          "<path_to_mcp_server_trino>",
          "run",
          "mcp_server_trino"
        ],
        "env": {
          "TRINO_HOST": "<host>",
          "TRINO_PORT": "<port>",
          "TRINO_USER": "<user>",
          "TRINO_PASSWORD": "<password>",
          "TRINO_CATALOG": "<catalog>",
          "TRINO_SCHEMA": "<schema>"
        }
      }
    }
  },
  "configForArchestra": {
    "command": "uv",
    "args": [
      "--directory",
      "<path_to_mcp_server_trino>",
      "run",
      "mcp_server_trino"
    ],
    "env": {
      "server-basic": "",
      "server-configured": "",
      "server-docker": ""
    },
    "transport": "stdio",
    "oauth": {}
  },
  "dependencies": [
    {
      "importance": 10,
      "name": "mcp"
    },
    {
      "importance": 9,
      "name": "trino"
    }
  ]
}