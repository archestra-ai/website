{
  "dxt_version": "0.1.0",
  "name": "hustcc__mcp-mermaid",
  "display_name": "mcp-mermaid",
  "version": "1.0.0",
  "description": "‚ù§Ô∏è Generate mermaid diagram and chart with AI MCP dynamically.",
  "author": {
    "name": "hustcc"
  },
  "server": {
    "type": "node",
    "entry_point": "index.js",
    "mcp_config": {
      "command": "unknown",
      "args": [],
      "env": {}
    }
  },
  "tools": [],
  "prompts": [],
  "keywords": [],
  "user_config": {},
  "readme": "# <img src=\"https://mermaid.js.org/favicon.svg\" height=\"24\"/> MCP Mermaid ![](https://badge.mcpx.dev?type=server 'MCP Server')  [![build](https://github.com/hustcc/mcp-mermaid/actions/workflows/build.yml/badge.svg)](https://github.com/hustcc/mcp-mermaid/actions/workflows/build.yml) [![npm Version](https://img.shields.io/npm/v/mcp-mermaid.svg)](https://www.npmjs.com/package/mcp-mermaid) [![smithery badge](https://smithery.ai/badge/@hustcc/mcp-mermaid)](https://smithery.ai/server/@hustcc/mcp-mermaid) [![npm License](https://img.shields.io/npm/l/mcp-mermaid.svg)](https://www.npmjs.com/package/mcp-mermaid)\n\nGenerate <img src=\"https://mermaid.js.org/favicon.svg\" height=\"14\"/> [mermaid](https://mermaid.js.org/) diagram and chart with AI MCP dynamically. Also you can use <img src=\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ZFK8SrovcqgAAAAAAAAAAAAAemJ7AQ/original\" height=\"14\"/> [mcp-server-chart](https://github.com/antvis/mcp-server-chart) to generate chart, graph, map.\n\n\n## ‚ú® Features\n\n- Fully support all features and syntax of `Mermaid`.\n- Support configuration of `backgroundColor` and `theme`, enabling large AI models to output rich style configurations.\n- Support exporting to `png`, `svg`, and `mermaid` formats, with validation for `Mermaid` to facilitate the model's multi-round output of correct syntax and graphics.\n\n<img width=\"720\" alt=\"mcp-mermaid\" src=\"https://mermaid.js.org/header.png\" />\n\n\n## ü§ñ Usage\n\nTo use with `Desktop APP`, such as Claude, VSCode, Cline, Cherry Studio, and so on, add the  MCP server config below. On Mac system:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-mermaid\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"mcp-mermaid\"\n      ]\n    }\n  }\n}\n```\n\nOn Window system:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-mermaid\": {\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"mcp-mermaid\"\n      ]\n    }\n  }\n}\n```\n\nAlso, you can use it on aliyun, modelscope, glama.ai, smithery.ai or others with HTTP, SSE Protocol.\n\n\n## üö∞ Run with SSE or Streamable transport\n\nInstall the package globally.\n\n```bash\nnpm install -g mcp-mermaid\n```\n\nRun the server with your preferred transport option:\n\n```bash\n# For SSE transport (default endpoint: /sse)\nmcp-mermaid -t sse\n\n# For Streamable transport with custom endpoint\nmcp-mermaid -t streamable\n```\n\nThen you can access the server at:\n- SSE transport: `http://localhost:3033/sse`\n- Streamable transport: `http://localhost:3033/mcp`\n\n\n## üéÆ CLI Options\n\nYou can also use the following CLI options when running the MCP server. Command options by run cli with `-h`.\n\n```plain\nMCP Mermaid CLI\n\nOptions:\n  --transport, -t  Specify the transport protocol: \"stdio\", \"sse\", or \"streamable\" (default: \"stdio\")\n  --port, -p       Specify the port for SSE or streamable transport (default: 3033)\n  --endpoint, -e   Specify the endpoint for the transport:\n                    - For SSE: default is \"/sse\"\n                    - For streamable: default is \"/mcp\"\n  --help, -h       Show this help message\n```\n\n\n## üî® Development\n\nInstall dependencies:\n\n```bash\nnpm install\n```\n\nBuild the server:\n\n```bash\nnpm run build\n```\n\nStart the MCP server:\n\n```bash\nnpm run start\n```\n\n\n## üìÑ License\n\nMIT@[hustcc](https://github.com/hustcc).\n",
  "category": "AI Tools",
  "quality_score": 55,
  "archestra_config": {
    "client_config_permutations": {
      "mcpServers": {
        "mcp-mermaid-stdio": {
          "command": "npx",
          "args": ["-y", "mcp-mermaid"],
          "env": {}
        },
        "mcp-mermaid-stdio-windows": {
          "command": "cmd",
          "args": ["/c", "npx", "-y", "mcp-mermaid"],
          "env": {}
        },
        "mcp-mermaid-sse": {
          "command": "mcp-mermaid",
          "args": ["-t", "sse"],
          "env": {}
        },
        "mcp-mermaid-streamable": {
          "command": "mcp-mermaid",
          "args": ["-t", "streamable"],
          "env": {}
        }
      }
    },
    "oauth": {
      "provider": null,
      "required": false
    }
  },
  "github_info": {
    "owner": "hustcc",
    "repo": "mcp-mermaid",
    "url": "https://github.com/hustcc/mcp-mermaid",
    "name": "mcp-mermaid",
    "path": null,
    "stars": 88,
    "contributors": 4,
    "issues": 0,
    "releases": false,
    "ci_cd": true,
    "latest_commit_hash": "38086612658a08ac2eefdef6c0c2117eb804e67c"
  },
  "programming_language": "TypeScript",
  "framework": null,
  "last_scraped_at": "2025-08-04T09:33:43.475Z",
  "evaluation_model": "gemini-2.5-flash",
  "protocol_features": {
    "implementing_tools": true,
    "implementing_prompts": false,
    "implementing_resources": false,
    "implementing_sampling": false,
    "implementing_roots": false,
    "implementing_logging": false,
    "implementing_stdio": true,
    "implementing_streamable_http": true,
    "implementing_oauth2": false
  },
  "dependencies": [
    {
      "name": "@modelcontextprotocol/sdk",
      "importance": 10
    },
    {
      "name": "mermaid-isomorphic",
      "importance": 9
    },
    {
      "name": "playwright",
      "importance": 8
    },
    {
      "name": "zod",
      "importance": 7
    },
    {
      "name": "zod-to-json-schema",
      "importance": 7
    }
  ],
  "raw_dependencies": "=== package.json ===\n{\n  \"name\": \"mcp-mermaid\",\n  \"description\": \"‚ù§Ô∏è Generate mermaid diagram and chart with AI MCP dynamically.\",\n  \"version\": \"0.1.3\",\n  \"main\": \"build/index.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"test\": \"vitest\",\n    \"prebuild\": \"rm -rf build/*\",\n    \"build\": \"tsc && tsc-alias -p tsconfig.json\",\n    \"start\": \"npx @modelcontextprotocol/inspector node build/index.js\",\n    \"prepare\": \"husky && npm run build\",\n    \"prepublishOnly\": \"npm run build\",\n    \"postinstall\": \"playwright install --with-deps chromium\"\n  },\n  \"bin\": {\n    \"mcp-mermaid\": \"./build/index.js\"\n  },\n  \"files\": [\"build\"],\n  \"keywords\": [\"mcp\", \"mermaid\", \"data-visualization\", \"chart\", \"diagram\"],\n  \"dependencies\": {\n    \"@modelcontextprotocol/sdk\": \"^1.11.4\",\n    \"mermaid-isomorphic\": \"^3.0.4\",\n    \"playwright\": \"^1.52.0\",\n    \"zod\": \"^3.25.16\",\n    \"zod-to-json-schema\": \"^3.24.5\"\n  },\n  \"devDependencies\": {\n    \"@biomejs/biome\": \"1.9.4\",\n    \"@modelcontextprotocol/inspector\": \"^0.12.0\",\n    \"@types/node\": \"^22.15.21\",\n    \"husky\": \"^9.1.7\",\n    \"lint-staged\": \"^15.5.2\",\n    \"tsc-alias\": \"^1.8.16\",\n    \"typescript\": \"^5.8.3\",\n    \"vitest\": \"^3.1.4\"\n  },\n  \"lint-staged\": {\n    \"*.{ts,js,json}\": [\n      \"biome check --write\",\n      \"biome format --write\",\n      \"biome lint\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/hustcc/mcp-mermaid\"\n  },\n  \"license\": \"MIT\"\n}\n"
}
