{
  "dxt_version": "1.0.0",
  "version": "1.0.0",
  "name": "klavis-ai__klavis",
  "display_name": "youtube",
  "description": "Klavis AI (YC X25):  Open Source MCP integration for AI applications",
  "author": {
    "name": "Klavis-AI"
  },
  "server": {
    "type": "binary",
    "entry_point": "docker",
    "mcp_config": {
      "command": "docker",
      "args": [
        "run",
        "-it",
        "-e",
        "KLAVIS_API_KEY=${user_config.klavis_api_key}",
        "ghcr.io/klavis-ai/gmail-mcp-server-oauth:latest"
      ],
      "env": {
        "KLAVIS_API_KEY": "${user_config.klavis_api_key}"
      }
    }
  },
  "readme": "<div align=\"center\">\n  <picture>\n    <img src=\"https://raw.githubusercontent.com/klavis-ai/klavis/main/static/klavis-ai.png\" width=\"80\">\n  </picture>\n</div>\n\n<h1 align=\"center\">Klavis AI - Production-Ready MCP Servers</h1>\n<p align=\"center\"><strong>🌐 Hosted MCP Service | 🐳 Self-Hosted Solutions | 🔐 Enterprise OAuth</strong></p>\n\n<div align=\"center\">\n\n[![Documentation](https://img.shields.io/badge/Documentation-📖-green)](https://docs.klavis.ai)\n[![Website](https://img.shields.io/badge/Website-🌐-purple)](https://www.klavis.ai)\n[![Discord](https://img.shields.io/badge/Discord-Join-7289DA?logo=discord&logoColor=white)](https://discord.gg/p7TuTEcssn)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](LICENSE)\n[![Docker Images](https://img.shields.io/badge/Docker-ghcr.io-blue?logo=docker)](https://github.com/orgs/klavis-ai/packages)\n\n</div>\n\n## 🚀 Quick Start - Run Any MCP Server in 30 Seconds\n\n### 🌐 Using Hosted Service (Recommended for Production)\n\nGet instant access to 50+ MCP servers with our managed infrastructure - **no setup required**:\n\n**🔗 [Get Free API Key →](https://www.klavis.ai/home/api-keys)**\n\n```bash\npip install klavis\n# or\nnpm install klavis\n```\n\n```python\nfrom klavis import Klavis\n\nklavis = Klavis(api_key=\"your-free-key\")\nserver = klavis.mcp_server.create_server_instance(\"GMAIL\", \"user123\")\n```\n\n### 🐳 Using Docker (For Self-Hosting)\n\n```bash\n# Run GitHub MCP Server\ndocker run -p 5000:5000 ghcr.io/klavis-ai/github-mcp-server:latest\n\n# Run Gmail MCP Server with OAuth\ndocker run -it -e KLAVIS_API_KEY=your_key \\\n  ghcr.io/klavis-ai/gmail-mcp-server-oauth:latest\n\n# Run YouTube MCP Server\ndocker run -p 5000:5000 ghcr.io/klavis-ai/youtube-mcp-server:latest\n```\n\n### 🖥️ Cursor Configuration\n\n**For Cursor, use our hosted service URLs directly - no Docker setup needed:**\n\n```json\n{\n  \"mcpServers\": {\n    \"klavis-gmail\": {\n      \"url\": \"https://gmail-mcp-server.klavis.ai/mcp/?instance_id=your-instance\"\n    },\n    \"klavis-github\": {\n      \"url\": \"https://github-mcp-server.klavis.ai/mcp/?instance_id=your-instance\"\n    }\n  }\n}\n```\n\n**💡 Get your personalized configuration instantly:**\n\n1. **🔗 [Visit our MCP Servers page →](https://www.klavis.ai/home/mcp-servers)**\n2. **Select any service** (Gmail, GitHub, Slack, etc.)  \n3. **Copy the generated configuration** for your tool\n4. **Paste into Claude Desktop config** - done!\n\n## ✨ Enterprise-Grade MCP Infrastructure\n\n- **🌐 Hosted Service**: Production-ready managed infrastructure with 99.9% uptime SLA\n- **🔐 Enterprise OAuth**: Seamless authentication for Google, GitHub, Slack, Salesforce, etc.\n- **🛠️ 50+ Integrations**: CRM, productivity tools, databases, social media, and more\n- **🚀 Instant Deployment**: Zero-config setup for Claude Desktop, VS Code, Cursor\n- **🏢 Enterprise Ready**: SOC2 compliant, GDPR ready, with dedicated support\n- **📖 Open Source**: Full source code available for customization and self-hosting\n\n## 🎯 Self Hosting Instructions\n\n### 1. 🐳 Docker Images (Fastest Way to Start)\n\nPerfect for trying out MCP servers or integrating with AI tools like Claude Desktop.\n\n**Available Images:**\n- `ghcr.io/klavis-ai/{server-name}-mcp-server:latest` - Basic server\n- `ghcr.io/klavis-ai/{server-name}-mcp-server-oauth:latest` - With OAuth support\n\n[**🔍 Browse All Docker Images →**](https://github.com/orgs/Klavis-AI/packages?repo_name=klavis)\n\n```bash\n# Example: GitHub MCP Server\ndocker run -p 5000:5000 ghcr.io/klavis-ai/github-mcp-server:latest\n\n# Example: Gmail with OAuth (requires API key)\ndocker run -it -e KLAVIS_API_KEY=your_key \\\n  ghcr.io/klavis-ai/gmail-mcp-server-oauth:latest\n```\n\n[**🔗 Get Free API Key →**](https://www.klavis.ai/home/api-keys)\n\n### 2. 🏗️ Build from Source\n\nClone and run any MCP server locally (with or without Docker):\n\n```bash\ngit clone https://github.com/klavis-ai/klavis.git\ncd klavis/mcp_servers/github\n\n# Option A: Using Docker\ndocker build -t github-mcp .\ndocker run -p 5000:5000 github-mcp\n\n# Option B: Run directly (Go example)\ngo mod download\ngo run server.go\n\n# Option C: Python servers  \ncd ../youtube\npip install -r requirements.txt\npython server.py\n\n# Option D: Node.js servers\ncd ../slack  \nnpm install\nnpm start\n```\n\nEach server includes detailed setup instructions in its individual README.\n\nUse our managed infrastructure - no Docker required:\n\n```bash\npip install klavis  # or npm install klavis\n```\n\n## 🛠️ Available MCP Servers\n\n| Service | Docker Image | OAuth Required | Description |\n|---------|--------------|----------------|-------------|\n| **GitHub** | `ghcr.io/klavis-ai/github-mcp-server` | ✅ | Repository management, issues, PRs |\n| **Gmail** | `ghcr.io/klavis-ai/gmail-mcp-server-oauth` | ✅ | Email reading, sending, management |\n| **Google Sheets** | `ghcr.io/klavis-ai/google_sheets-mcp-server-oauth` | ✅ | Spreadsheet operations |\n| **YouTube** | `ghcr.io/klavis-ai/youtube-mcp-server` | ❌ | Video information, search |\n| **Slack** | `ghcr.io/klavis-ai/slack-mcp-server-oauth` | ✅ | Channel management, messaging |\n| **Notion** | `ghcr.io/klavis-ai/notion-mcp-server-oauth` | ✅ | Database and page operations |\n| **Salesforce** | `ghcr.io/klavis-ai/salesforce-mcp-server-oauth` | ✅ | CRM data management |\n| **Postgres** | `ghcr.io/klavis-ai/postgres-mcp-server` | ❌ | Database operations |\n| ... | ... | ...| ... |\n\nAnd more! \n[**🔍 View All 50+ Servers →**](https://docs.klavis.ai/documentation/introduction#mcp-server-quickstart) | [**🐳 Browse Docker Images →**](https://github.com/orgs/Klavis-AI/packages?repo_name=klavis)\n\n## 💡 Usage Examples\n\nFor existing MCP implementations:\n\n**Python**\n```python\nfrom klavis import Klavis\n\nklavis = Klavis(api_key=\"your-key\")\nserver = klavis.mcp_server.create_server_instance(\n    server_name=\"YOUTUBE\",\n    user_id=\"user123\",\n    platform_name=\"MyApp\"\n)\n```\n\n**TypeScript**\n```typescript\nimport { KlavisClient } from 'klavis';\n\nconst klavis = new KlavisClient({ apiKey: 'your-key' });\nconst server = await klavis.mcpServer.createServerInstance({\n    serverName: \"Gmail\",\n    userId: \"user123\"\n});\n```\n\n### With AI Frameworks\n\n**OpenAI Function Calling**\n```python\nfrom openai import OpenAI\nfrom klavis import Klavis\n\nklavis = Klavis(api_key=\"your-key\")\nopenai = OpenAI(api_key=\"your-openai-key\")\n\n# Create server and get tools\nserver = klavis.mcp_server.create_server_instance(\"YOUTUBE\", \"user123\")\ntools = klavis.mcp_server.list_tools(server.server_url, format=\"OPENAI\")\n\n# Use with OpenAI\nresponse = openai.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Summarize this video: https://...\"}],\n    tools=tools.tools\n)\n```\n\n[**📖 View Complete Examples →**](examples/)\n\n## 🌐 Hosted MCP Service - Zero Setup Required\n\n**Perfect for individuals and businesses who want instant access without infrastructure complexity:**\n\n### ✨ **Why Choose Our Hosted Service:**\n- **🚀 Instant Setup**: Get any MCP server running in 30 seconds\n- **🔐 OAuth Handled**: No complex authentication setup required  \n- **🏗️ No Infrastructure**: Everything runs on our secure, scalable cloud\n- **📈 Auto-Scaling**: From prototype to production seamlessly\n- **🔄 Always Updated**: Latest MCP server versions automatically\n- **💰 Cost-Effective**: Pay only for what you use, free tier available\n\n### 💻 **Quick Integration:**\n\n```python\nfrom klavis import Klavis\n\n# Get started with just an API key\nklavis = Klavis(api_key=\"your-free-key\")\n\n# Create any MCP server instantly\ngmail_server = klavis.mcp_server.create_server_instance(\n    server_name=\"GMAIL\",\n    user_id=\"your-user-id\", \n    platform_name=\"MyApp\"\n)\n\n# Server is ready to use immediately\nprint(f\"Gmail MCP server ready: {gmail_server.server_url}\")\n```\n\n**🔗 [Get Free API Key →](https://www.klavis.ai/home/api-keys)** | **📖 [Complete Documentation →](https://docs.klavis.ai)**\n\n## 🔐 OAuth Authentication (For OAuth-Enabled Servers)\n\nSome servers require OAuth authentication (Google, GitHub, Slack, etc.). OAuth implementation requires significant setup and code complexity:\n\n```bash\n# Run with OAuth support (requires free API key)\ndocker run -it -e KLAVIS_API_KEY=your_free_key \\\n  ghcr.io/klavis-ai/gmail-mcp-server-oauth:latest\n\n# Follow the displayed URL to authenticate\n# Server starts automatically after authentication\n```\n\n**Why OAuth needs additional implementation?**\n- 🔧 **Complex Setup**: Each service requires creating OAuth apps with specific redirect URLs, scopes, and credentials\n- 📝 **Implementation Overhead**: OAuth 2.0 flow requires callback handling, token refresh, and secure storage\n- 🔑 **Credential Management**: Managing multiple OAuth app secrets across different services\n- 🔄 **Token Lifecycle**: Handling token expiration, refresh, and error cases\n\nOur OAuth wrapper simplifies this by handling all the complex OAuth implementation details, so you can focus on using the MCP servers directly.\n\n**Alternative**: For advanced users, you can implement OAuth yourself by creating apps with each service provider. Check individual server READMEs for technical details.\n\n## 📚 Resources & Community\n\n| Resource | Link | Description |\n|----------|------|-------------|\n| **📖 Documentation** | [docs.klavis.ai](https://docs.klavis.ai) | Complete guides and API reference |\n| **💬 Discord** | [Join Community](https://discord.gg/p7TuTEcssn) | Get help and connect with users |\n| **🐛 Issues** | [GitHub Issues](https://github.com/klavis-ai/klavis/issues) | Report bugs and request features |\n| **📦 Examples** | [examples/](examples/) | Working examples with popular AI frameworks |\n| **🔧 Server Guides** | [mcp_servers/](mcp_servers/) | Individual server documentation |\n\n## 🤝 Contributing\n\nWe love contributions! Whether you want to:\n- 🐛 Report bugs or request features\n- 📝 Improve documentation  \n- 🔧 Build new MCP servers\n- 🎨 Enhance existing servers\n\nCheck out our [Contributing Guide](CONTRIBUTING.md) to get started!\n\n## 📜 License\n\nMIT License - see [LICENSE](LICENSE) for details.\n\n---\n\n<div align=\"center\">\n  <p><strong>🚀 Supercharge AI Applications </strong></p>\n  <p>\n    <a href=\"https://www.klavis.ai\">Get Free API Key</a> •\n    <a href=\"https://docs.klavis.ai\">Documentation</a> •\n    <a href=\"https://discord.gg/p7TuTEcssn\">Discord</a> •\n    <a href=\"examples/\">Examples</a>\n  </p>\n</div>\n",
  "category": "AI Tools",
  "quality_score": 70,
  "programming_language": "Python",
  "framework": null,
  "github_info": {
    "owner": "klavis-ai",
    "repo": "klavis",
    "url": "https://github.com/klavis-ai/klavis",
    "name": "klavis-ai__klavis",
    "path": null,
    "stars": 3955,
    "contributors": 22,
    "issues": 17,
    "releases": true,
    "ci_cd": true,
    "latest_commit_hash": "ea2814bb8ac033c4312e9054b8ff899f1ff0dab5"
  },
  "protocol_features": {
    "implementing_logging": false,
    "implementing_oauth2": true,
    "implementing_prompts": false,
    "implementing_resources": false,
    "implementing_roots": false,
    "implementing_sampling": false,
    "implementing_stdio": false,
    "implementing_streamable_http": true,
    "implementing_tools": true
  },
  "dependencies": [],
  "user_config": {
    "klavis_api_key": {
      "type": "string",
      "title": "Klavis API Key",
      "description": "Your Klavis API key, required for running OAuth-enabled servers like Gmail.",
      "sensitive": true,
      "required": true
    }
  },
  "archestra_config": null,
  "evaluation_model": "gemini-2.5-pro",
  "raw_dependencies": "=== mcp-clients/pyproject.toml ===\n[project]\nname = \"mcp-clients\"\nversion = \"0.1.0\"\ndescription = \"Klavis AI: Open source MCP clients and Servers\"\nreadme = \"README.md\"\nrequires-python = \">=3.12\"\ndependencies = [\n    \"discord.py>=2.3.0\",\n    \"anthropic>=0.54.0\",\n    \"python-dotenv>=1.1.0\",\n    \"anyio>=4.9.0\",\n    \"trio>=0.22.0\",\n    \"mcp>=1.9.3\",\n    \"supabase>=2.15.0\",\n    \"fastapi>=0.115.12\",\n    \"uvicorn>=0.34.0\",\n    \"slack-bolt>=1.23.0\",\n    \"httpx>=0.28.1\",\n    \"openai>=1.72.0\",\n    \"markitdown[all]\",\n    \"pywa>=0.7.0\",\n    \"uvloop>=0.17.0\",\n]\n\n[tool.uv]\npackage = true\n\n[project.scripts]\ndiscord_bot = \"mcp_clients.discord_bot:main\"\nslack_bot = \"mcp_clients.slack_bot:main\"\nweb_bot = \"mcp_clients.web_bot:main\"\nwhatsapp_bot = \"mcp_clients.whatsapp_bot:main\"\n\n=== mcp_servers/package.json ===\n{\n    \"name\": \"klavis-ai-mcp-servers\",\n    \"version\": \"1.0.0\",\n    \"private\": true,\n    \"scripts\": {\n        \"lint\": \"eslint \\\"**/*.ts\\\" --max-warnings=0\",\n        \"lint:fix\": \"eslint \\\"**/*.ts\\\" --fix\",\n        \"format\": \"prettier --write \\\"**/*.{js,jsx,ts,tsx,json,md}\\\"\",\n        \"format:check\": \"prettier --check \\\"**/*.{js,jsx,ts,tsx,json,md}\\\"\",\n        \"typecheck\": \"tsc --noEmit\"\n    },\n    \"devDependencies\": {\n        \"@typescript-eslint/eslint-plugin\": \"^7.0.0\",\n        \"@typescript-eslint/parser\": \"^7.0.0\",\n        \"eslint\": \"^8.56.0\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-prettier\": \"^5.2.6\",\n        \"lint-staged\": \"^15.5.1\",\n        \"prettier\": \"^3.5.3\"\n    }\n}",
  "last_scraped_at": "2025-08-19T15:20:58.866Z"
}
